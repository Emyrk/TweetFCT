"""
This is a python bash script to write tweets to factom. Should run, but needs to connect to constand http address
"""

import sys, os, math, shutil
import subprocess
import numpy as np
from datetime import datetime
import tweepy #Python twitter API handler
from factom import Factomd, FactomWalletd #python Factom API
#import settings


def credentials(file):
    """
    This function takes a .txt file containg your credentials to use the program
    and audit tweets using factom as an input. The contents of the file are formatted 
    as follows:
    
    line 1: TWITTER_KEY = 'Your Twitter Key'
    line 2: TWITTER_SECRET = 'Your Twitter Secret'
    line 3: TWITTER_APP_KEY = ' Your Twitter App Key'
    line 4: TWITTER_APP_SECRET = 'Your Twitter App secret'
    line 5: FCT_ADDRESS = 'Your FCT Address'
    line 6: EC_ADDRESS = 'Your EC Address'
    line 7: host1 = 'IP address and port as a string of your factomd'
    line 8: host2 = 'IP address and port as string of your walletd'
    line 9: username = 'Your Username on Twitter'
    
    The function then parses the file and assigns each of these as variables.
    """
    creds = file
    print('credentials received')
    keys = open(creds[0], 'r')
    
    for line in keys:
        for word in line.split(" "):
            
            if word =='TWITTER_KEY':
                print('Grabbing Twitter Key!')
                Twitter_Key = line.split(" ")[2]
                
            if word =='TWITTER_SECRET':
                print('Grabbing Twitter Secret!')
                Twitter_Secret = line.split(" ")[2]
     
            if word =='TWITTER_APP_KEY':
                print('Grabbing Twitter App Key!')
                Twitter_App_Key = line.split(" ")[2]
                
            if word =='TWITTER_APP_SECRET':
                print('Grabbing Twitter App Secret!')
                Twitter_App_Secret = line.split(" ")[2]
                
            if word =='FCT_ADDRESS':
                print('Grabbing FCT_ADDRESS!')
                FCT_Address = line.split(" ")[2]
                
            if word =='EC_ADDRESS':
                print('Grabbing EC_ADDRESS!')
                EC_Address = line.split(" ")[2]
                
            if word =='host1':
                print('Grabbing Factomd host')
                host_1 = line.split(" ")[2]
                
            if word =='host2':
                print('Grabbing Walletd host')
                host_2 = line.split(" ")[2]
                
            if word =='user_ID':
                print('Grabbing Twitter User ID')
                user_ID = line.split(" ")[2]
                
            if word =='chain_ID':
                print('Grabbing FactomTweet Chain ID')
                chain_ID = line.split(" ")[2]
                
            if word =='username':
                print('Grabbing Twitter Username')
                T_username = line.split(" ")[2]
                print(T_username)

    return Twitter_Key, Twitter_Secret, Twitter_App_Key, Twitter_App_Secret, FCT_Address, EC_Address, host_1, host_2, user_ID, chain_ID, T_username
    
def factomize(host_1, host_2, FCT_Address, EC_Address):
    
    """
    
    This function connects you to your factom wallet on the testnet. The IP addresses for
    factomd and walletd as well as the FCT and EC Addresses are taken as inputs.
    
    """
    factomd = Factomd(
            host = host_1,
            fct_address = FCT_Address,
            ec_address = EC_Address,
            username='rpc_username',
            password='rpc_password'
            )

    walletd = FactomWalletd(
            host = host_2,
            fct_address = FCT_Address,
            ec_address = EC_Address,
            username='rpc_username',
            password='rpc_password'
            )
    print('Factomization complete!')
    return factomd, walletd

def authenticate(Twitter_Key, Twitter_Secret, Twitter_App_Key, Twitter_App_Secret):
    
    
    print('Authenticating Twiter Developer Credentials....')
    
    auth = tweepy.OAuthHandler(Twitter_Key, Twitter_Secret)
    print('Twitter App Authorized!')
    
    auth.set_access_token(Twitter_App_Key, Twitter_App_Secret)
    print('Twitter App Authorized!')
    
    
    api = tweepy.API(auth,wait_on_rate_limit=True, wait_on_rate_limit_notify=True)
    
    
    #api.update_status('tweepy + oauth!')
    print(api)
    return api   

###########################################
    
def main(file, diagnosis = False):
    
    print('fetching credentials')
    Twitter_Key, Twitter_Secret, Twitter_App_Key, Twitter_App_Secret, FCT_Address, EC_Address, host_1, host_2, user_ID, chain_ID, T_username = credentials(file)  
    print('Credentials Received, Connecting to your Factom Wallet...')
    
    factomd, walletd = factomize(host_1, host_2, FCT_Address, EC_Address)
    print('factomd and walletd connected, ready to start tracking tweets!')
    
    api = authenticate(Twitter_Key, Twitter_Secret, Twitter_App_Key, Twitter_App_Secret)
    print('Twitter API Authentication complete!')
    
    print('Grabbing IDs.....')
    
    print('Tracking User ID:' + user_ID)
    print('Tracking Chain ID:' + chain_ID)
    
    class StreamListener(tweepy.StreamListener):
        print('streamer engaged')
        def on_status(self, status):  #Tweets will need to be filtered, twitter default pulls ALL tweets with the username you're tracking
            print(status.text, 'status')
            if T_username in status.text:
                print(T_username)
                return
            if status.in_reply_to_user_id_str is user_ID:  #this filters replies to this twitter ID
                return
        
            name = status.user.screen_name #pulls username of tweeter
        
            fct_entry = ''.join(('@', name, ' tweeted: ', status.text)) #combines the the message into a string that can be written to Factom
            print(name, 'tweeted', status.text)
        
            walletd.new_entry(factomd, chain_ID, ['random', 'entry', 'id'], fct_entry, ec_address=EC_Address) #makes entry into the factom testnet
            
    StreamListener = StreamListener()
    print(StreamListener)
    
    stream = tweepy.Stream(auth = api.auth, listener = StreamListener)
    
    stream.filter(follow=[str(user_ID)])
    print(user_ID)
    print('Streaming Engaged! Check https://testnet.factoid.org/data?type=chain&key=da2ffed0ae7b33acc718089edc0f1d001289857cc27a49b6bc4dd22fac971495')
    
    
if __name__ == '__main__':    
    main(sys.argv[1:]) 
